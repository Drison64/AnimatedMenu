{
  "title": "Click Handlers",
  "description": [
    "Almost every item in a menu needs to have (a) click handler(s)",
    "And that's where this comes in!",
    "You can use this in 3 ways:",
    [
      "In the item's section itself, so where you put Slot, Name, Material etc. This limits you to 1 click handler",
      "In separate sections, under 'Click-Handlers' at the item, e.g.:",
      [
        "===CODE YAML===",
        "Click-Handlers:",
        "  example:",
        "    Click-Type: left",
        "    Commands:",
        "    - 'message: &6Hello there!'",
        "  anything:",
        "    Click-Type: right",
        "    Commands:",
        "    - 'message: &aI am green!'"
      ],
      "Using a list of sections, e.g.:",
      [
        "===CODE YAML===",
        "Click-Handlers:",
        "- Click-Type: left",
        "  Commands:",
        "  - 'message: &6Hello there!'",
        "- Click-Type: right",
        "  Commands:",
        "  - 'message: &aI am green!'"
      ]
    ]
  ],
  "options": {
    "@": "Animatable",
    "+": "Animatable with Plus version",
    "%": "Supports placeholders",
    "{": "Supports special placeholders",
    "/": "Formula",
    "<": "Script"
  },
  "config": [
    {
      "title": "Standard features",
      "values": [
        {
          "name": "Click-Type",
          "default": "both",
          "description": [
            "The click types to accept, can be either:",
            [
              "A comma separated list of 'right', 'left' or 'middle'",
              "'all' to accept all click types",
              "'both' for only right and left click"
            ]
          ]
        }, {
          "name": "Shift-Click",
          "default": "both",
          "description": "A Flag which specifies whether this handler accepts shift clicks"
        }, {
          "name": "Price",
          "description": [
            "The amount of Vault money required for this handler",
            "Vault and an economy handler (like Essentials) need to be installed of course"
          ]
        }, {
          "name": "Price-Message",
          "options": "%",
          "default": "'&cYou don't have enough money for that!'",
          "description": "The message to send when the player does not have #Price"
        }, {
          "name": "Points",
          "description": [
            "The amount of player points required for this handler",
            "PlayerPoints is needed for this"
          ]
        }, {
          "name": "Points-Message",
          "options": "%",
          "default": "'&cYou don't have enough points for that!'",
          "description": "The message to send when the player does not have #Points"
        }, {
          "name": "Gems",
          "description": [
            "The amount of gems required for this handler",
            "GemsEconomy is needed for this"
          ]
        }, {
          "name": "Gems-Message",
          "options": "%",
          "default": "'&cYou don't have enough gems for that!'",
          "description": "The message to send when the player does not have #Gems"
        }, {
          "name": "Exp",
          "description": [
            "The amount of exp required to use this item.",
            "Start with an L to use levels, e.g. \"Exp: 'L10'\""
          ]
        }, {
          "name": "Exp-Message",
          "description": "The message to send when the player does not have #Exp"
        }, {
          "name": "Permission",
          "options": "%",
          "description": "The permission required to use this click handler"
        }, {
          "name": "Permission-Message",
          "options": "%",
          "default": "'&cYou are not permitted to do that!'",
          "description": "The message to send when the player does not have #Permission"
        }, {
          "name": "Bypass-Permission",
          "options": "%",
          "description": "A permission that allows the player to bypass #Price and #Points"
        }, {
          "name": "Close",
          "default": "never",
          "description": [
            "Specifies whether the menu should close when this item is clicked",
            "This accepts one of these values:",
            [
              "*always* to always close the menu",
              "*on-success* to close the menu when #Commands were successfully executed",
              "*on-failure* to close the menu when the player was not allowed to click the item",
              "*never* to never close the menu on click"
            ]
          ]
        }, {
          "name": "Click-Delay",
          "description": "The delay (in ticks) that a player must wait before clicking the item again"
        }, {
          "name": "Delay-Message",
          "options": "{",
          "description": [
            "The message to send when #Click-Delay is not over yet",
            "You can use these special placeholders to customize the message:",
            [
              "*{hoursleft}* to retrieve the amount of hours left",
              "*{minutesleft}* to retrieve the amount of minutes left in the hour",
              "*{secondsleft}* to retrieve the amount of seconds left in the minute",
              "*{ticksleft}* to retrieve the amount of ticks left in the second"
            ],
            "You can use formulas (e.g. \\(20{secondsleft} + {ticksleft})) to get a total of something"
          ]
        }, {
          "name": "Commands",
          "options": ",@%",
          "description": [
            "The commands to execute when the player is allowed to click this item",
            "NOTE: If you want to use { and } for things as tellraw, use \\{ and \\}",
            "By default, the player will execute the command you enter,",
            "but you can start a command with these followed by a colon to do something special:",
            [
              "*chat* to make the player chat a message",
              "*console* to make the console execute the command",
              "*message* to send a message to the player",
              "*op* to make the player execute the command as operator",
              "*broadcast* to broadcast a message to the entire server",
              "*server* to send the player to a specific bungeecord server",
              "*menu* to open a specific menu",
              "*tellraw* to send a raw message (e.g. \\\\{\"text\":\"Hello there!\"\\\\})",
              "*sound* to send a sound to a player, format '<soundname> [volume] [pitch]'",
              [ "For a list of sound names, see @{http://www.minecraftforum.net/forums/mapping-and-modding/mapping-and-modding-tutorials/1571574-all-minecraft-playsound-file-names-1-9|this page}" ],
              "*give* to give an item to a player, format identical to #Item but { and } should be replaced with \\{ and \\}",
              "If you have the Plus version, you also get access to these commands:",
              [
                "*bungee* to execute a command as the bungeecord console.",
                "*bungeeplayer* to execute a bungeecord command as the player",
                [ "Note: For the above 2 commands to work, you must put the AnimatedMenu Plus jar in the BungeeCord plugins folder!" ],
                "*script* to execute some javascript code",
                "*sql* to execute a config specified @{config.md#sql_statements|SQL Statement}",
                "*admin* to make an admin menu player execute a command"
              ]
            ]
          ]
        }
      ]
    }, {
      "title": "Plus features",
      "values": [
        {
          "name": "Requirement-Script",
          "options": "<%",
          "description": [
            "Some JavaScript code that specifies whether a player is allowed to click this item",
            "'%vault_eco_balance% > 100' would check if the player has more than $100",
            "For this case you could simply use #Price but it's just an example"
          ]
        }, {
          "name": "Script-Message",
          "options": "%",
          "description": "The message to send when the #Requirement-Script doesn't allow the player to click the item"
        }, {
          "name": "Item",
          "options": "%",
          "description": [
            "An item that the player must have to use this item. This item will be taken from them",
            "The format is '<id>:<amount>:<data> <nbt>', though <amount>, <data> and <nbt> are all optional",
            "<data> also supports values from data-values.yml",
            "A few examples:", [
              "===CODE YAML===",
              "Item: 'stone:1:granite'",
              "Item: 'diamond-sword {ench:[{id:16,lvl:3}]}'"
            ]
          ]
        }, {
          "name": "Item-Message",
          "options": "%",
          "description": "The message to send to the player when they do not have #Item"
        }
      ]
    }
  ]
}
